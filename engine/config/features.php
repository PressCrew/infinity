<?php
/**
 * Infinity Features Configuration.
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * Only edit files in a child theme.
 *
 * This file is a work in progress.
 *
 * @package Infinity
 * @subpackage config
 */

// overlay image defaults
$overlay_image_defaults = array(
	'type' => 'css/overlay-image',
	'file_directory' => 'assets/images/textures'
);

//
// Core Group
//
ice_register_group( 'core' );

	// Global Options
	ice_register_feature(
		array(
			'name' => 'options',
			'group' => 'core',
			'type' => 'default',
			'title' => 'Custom CSS',
			'description' => 'Core set of options included with Infinity Base'
		)
	);

		$infinity_core_options_defaults = array(
			'group' => 'core',
			'section' => 'global',
			'required_feature' => 'options'
		);

		ice_register_option(
			array(
				'name' => 'text-color',
				'type' => 'colorpicker',
				'title' => 'Text Color',
				'description' => 'Choose a text color',
				'style_selector' => 'body.theme-option',
				'style_property' => 'color'
			),
			$infinity_core_options_defaults
		);

		ice_register_option(
			array(
				'name' => 'link-color',
				'type' => 'colorpicker',
				'title' => 'Link Color',
				'description' => 'Choose a link color',
				'style_selector' => 'body.theme-option a, body.theme-option a:visited',
				'style_property' => 'color'
			),
			$infinity_core_options_defaults
		);

		ice_register_option(
			array(
				'name' => 'custom-favicon',
				'type' => 'upload',
				'title' => 'Site Favicon',
				'description' => 'Upload a favicon for your site'
			),
			$infinity_core_options_defaults
		);

		ice_register_option(
			array(
				'name' => 'sidebar-position',
				'section' => 'sidebar',
				'title' => 'Sidebar Position',
				'description' => 'Choose on which side you want to display the sidebar',
				'type' => 'radio',
				'default_value' => 'right',
				'field_options' => array(
					'left' => 'Left',
					'right' => 'Right'
				)
			),
			$infinity_core_options_defaults
		);

		ice_register_option(
			array(
				'name' => 'sidebar-size',
				'section' => 'sidebar',
				'title' => 'Sidebar Size',
				'description' => 'Select a sidebar size',
				'type' => 'select',
				'default_value' => 'twelve',
				'field_options' => array(
					'fourteen' => '15 percent',
					'thirteen' => '20 percent',
					'twelve' => '25 percent',
					'eleven' => '30 precent',
					'ten' => '35 percent',
					'nine' => '40 percent',
					'eight' => '50 percent',
					'disable' => 'Disable'
				)
			),
			$infinity_core_options_defaults
		);

		ice_register_option(
			array(
				'name' => 'google-analytics',
				'type' => 'textarea',
				'title' => 'Google Analytics Code',
				'description' => 'Paste your GA Tracking code in the text area below. Including the script tags!'
			),
			$infinity_core_options_defaults
		);

		ice_register_option(
			array(
				'name' => 'footer-text',
				'section' => 'footer',
				'type' => 'textarea',
				'title' => 'Footer Text',
				'description' => 'The footer text that appears at the bottom of every page, below the widgetized footer areas. This is commonly used for copyright, designed by, and powered by text. HTML tags are allowed.',
				'default_value' => 'Infinity by <a href=http://infinity.presscrew.com>PressCrew</a> and powered by <a href=http://wordpress.org>WordPress</a>.'
			),
			$infinity_core_options_defaults
		);

//
// Top Menu Group
//
ice_register_group( 'top-menu' );

	// Top Menu Setup
	ice_register_feature(
		array(
			'name' => 'setup',
			'group' => 'top-menu',
			'type' => 'default',
			'title' => 'Above Header Menu Setup',
			'description' => 'Register the menu above the header.'
		)
	);

	// Top Menu Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'top-menu',
			'type' => 'default',
			'title' => 'Sub Menu Styles',
			'description' => 'Customize the layout and colors of the menu above the header.'
		)
	);

		$infinity_top_menu_defaults = array(
			'group' => 'top-menu',
			'section' => 'menus-top',
			'required_feature' => 'layout'
		);

		ice_register_option(
			array(
				'name' => 'color-link',		
				'type' => 'colorpicker',
				'title' => 'Font Color',
				'description' => 'Choose a font color for links of the menu above the header.',
				'style_selector' => '.top-menu ul li a span',
				'style_property' => 'color'
			),
			$infinity_top_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'font-weight',
				'type' => 'select',
				'title' => 'Font Weight',
				'description' => 'Choose a font weight for links of the menu above the header.',
				'style_selector' => '.top-menu ul li a span',
				'style_property' => 'font-weight'
			),
			$infinity_top_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color',
				'style_selector' => '.top-menu'
			),
			$infinity_top_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color-subitem',
				'type' => 'css/bg-color',
				'title' => 'Sub-item Background',
				'description' => 'Choose a background color for the submenu items of the menu above the header.',
				'style_selector' => '.top-menu ul ul'
			),
			$infinity_top_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image',
				'group' => 'top-menu',
				'section' => 'menus-top',
				'style_selector' => '.top-menu'
			),
			array_merge( $infinity_top_menu_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '.top-menu:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_top_menu_defaults
		);

//
// Main Menu Group
//
ice_register_group( 'main-menu' );

	// Main Menu Setup
	ice_register_feature(
		array(
			'name' => 'setup',
			'group' => 'main-menu',
			'type' => 'default',
			'title' => 'Inside Header Menu Setup',
			'description' => 'Register the menu inside the header.'
		)
	);

	// Main Menu Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'main-menu',
			'type' => 'default',
			'title' => 'Main Menu Styles',
			'description' => 'Customize the layout and colors of the menu inside the header.'
		)
	);
	
		$infinity_main_menu_defaults = array(
			'group' => 'main-menu',
			'section' => 'menus-main',
			'required_feature' => 'layout'
		);
		
		ice_register_option(
			array(
				'name' => 'color-link',
				'type' => 'colorpicker',
				'title' => 'Font Color',
				'description' => 'Choose a font color for links of the menu inside the header.',
				'style_selector' => '.main-menu ul li a span',
				'style_property' => 'color'
			),
			$infinity_main_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'font-weight',
				'type' => 'select',
				'title' => 'Font Weight',
				'description' => 'Choose a font weight for links of the menu inside the header.',
				'style_selector' => '.main-menu ul li a span',
				'style_property' => 'font-weight'
			),
			$infinity_main_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'padding',
				'type' => 'css/length-px',
				'title' => 'Padding',
				'description' => 'Select the padding (spacing) around the menu links by moving the slider.',
				'max' => 30,
				'style_selector' => '.main-menu',
				'style_property' => 'padding'
			),
			$infinity_main_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color',
				'style_selector' => '.main-menu'
			),
			$infinity_main_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image',
				'style_selector' => '.main-menu'
			),
			array_merge( $infinity_main_menu_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '.main-menu:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_main_menu_defaults
		);

//
// Sub Menu Group
//
ice_register_group( 'sub-menu' );

	// Sub Menu Setup
	ice_register_feature(
		array(
			'name' => 'setup',
			'group' => 'sub-menu',
			'type' => 'default',
			'title' => 'Below Header Menu Setup',
			'description' => 'Register the menu below the header.'
		)
	);

	// Sub Menu Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'sub-menu',
			'type' => 'default',
			'title' => 'Sub Menu Styles',
			'description' => 'Customize the layout and colors of the menu below the header.'
		)
	);
	
		$infinity_sub_menu_defaults = array(
			'group' => 'sub-menu',
			'section' => 'menus-sub',
			'required_feature' => 'layout'
		);
		
		ice_register_option(
			array(
				'name' => 'color-link',
				'type' => 'colorpicker',
				'title' => 'Font Color',
				'description' => 'Choose a font color for links of the menu below the header.',
				'style_selector' => '.sub-menu ul li a span',
				'style_property' => 'color'
			),
			$infinity_sub_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'font-weight',
				'type' => 'select',
				'title' => 'Font Weight',
				'description' => 'Choose a font weight for links of the menu below the header.',
				'style_selector' => '.sub-menu ul li a span',
				'style_property' => 'font-weight'
			),
			$infinity_sub_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color',
				'style_selector' => '.sub-menu'
			),
			$infinity_sub_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color-subitem',
				'type' => 'css/bg-color',
				'title' => 'Sub-item Background',
				'description' => 'Choose a background color for the submenu items of the menu below the header.',
				'style_selector' => '.sub-menu ul ul'
			),
			$infinity_sub_menu_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image',
				'style_selector' => '.sub-menu'
			),
			array_merge( $infinity_sub_menu_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '.sub-menu:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_sub_menu_defaults
		);

//
// Footer Menu Group
//
ice_register_group( 'footer-menu' );

	// Footer Menu Setup
	ice_register_feature(
		array(
			'name' => 'setup',
			'group' => 'footer-menu',
			'type' => 'default',
			'title' => 'Footer Menu Setup',
			'description' => 'Register the footer menu.'
		)
	);


//
// Sidebar Group
//
ice_register_group( 'sidebar' );

	// Sidebar Setup
	ice_register_feature(
		array(
			'name' => 'setup',
			'group' => 'sidebar',
			'type' => 'default',
			'title' => 'Sidebar Setup',
			'description' => 'Sidebar Registration'
		)
	);

	// Sidebar Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'sidebar',
			'type' => 'default',
			'title' => 'sidebar Styles',
			'description' => 'Customize the layout and colors of the sidebar'
		)
	);

		$infinity_sidebar_layout_defaults = array(
			'group' => 'sidebar',
			'section' => 'sidebar',
			'required_feature' => 'layout',
			'style_selector' => '#sidebar'
		);

		ice_register_option(
			array(
				'name' => 'text-color',
				'type' => 'colorpicker',
				'title' => 'Text Color',
				'description' => 'Choose a color for text in the sidebar.',
				'style_property' => 'color'
			),
			$infinity_sidebar_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'link-color',
				'type' => 'colorpicker',
				'title' => 'Link Color',
				'description' => 'Choose a color for links in the sidebar.',
				'style_selector' => '#sidebar a',
				'style_property' => 'color'
			),
			$infinity_sidebar_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color',
			),
			$infinity_sidebar_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-image',
				'type' => 'css/bg-image',
			),
			$infinity_sidebar_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-repeat',
				'type' => 'css/bg-repeat',
				'parent' => 'background-image',
			),
			$infinity_sidebar_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image',
			),
			array_merge( $infinity_sidebar_layout_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '#sidebar:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_sidebar_layout_defaults
		);

//
// Post Group
//
ice_register_group( 'post' );

	// Post Pagination
	ice_register_feature(
		array(
			'name' => 'pagination',
			'group' => 'post',
			'type' => 'default',
			'title' => 'Pagination',
			'description' => 'Enable pagination for your (custom) posts'
		)
	);

	// Introduction boxes
	ice_register_feature(
		array(
			'name' => 'intro-boxes',
			'group' => 'post',
			'type' => 'default',
			'title' => 'Introduction Boxes',
			'description' => 'Introduction boxes that show above category, tag and author archives'
		)
	);

	// Author Boxes
	ice_register_feature(
		array(
			'name' => 'author-boxes',
			'group' => 'post',
			'type' => 'default',
			'title' => 'Author Boxes',
			'description' => 'Enable About the Author Boxes being displayed on single posts and author archives'
		)
	);

	// Post Avatars
	ice_register_feature(
		array(
			'name' => 'avatars',
			'group' => 'post',
			'type' => 'default',
			'title' => 'Post Avatars',
			'description' => 'Enable Post avatars being displayed on single posts and pages'
		)
	);

	// Post Gravatars
	ice_register_feature(
		array(
			'name' => 'gravatar',
			'group' => 'post',
			'type' => 'gravatar',
			'title' => 'Post Gravatars',
			'description' => 'Total control over post gravatars',
			'image_class' => 'infinity-post-gravatar'
		)
	);

		$infinity_post_grav_defaults = array(
			'group' => 'post',
			'section' => 'gravatars',
			'required_feature' => 'gravatar'
		);

		ice_register_option(
			array(
				'name' => 'size',
				'type' => 'text',
				'title' => 'Size',
				'description' => 'Enter the size in pixels for the Gravatar image'
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'default-set',
				'type' => 'select',
				'title' => 'Default Image Set',
				'description' => 'Select the default image set to use',
				'default_value' => 'mm',
				'field_options' => array(
					'404' => 'Return 404 Error',
					'mm' => 'Mystery Man',
					'identicon' => 'Identicon',
					'monsterid' => 'Monster ID',
					'wavatar' => 'Wavatar',
					'retro' => 'Retro'
				)
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'default-img',
				'type' => 'upload',
				'title' => 'Default Image File',
				'description' => 'Upload a default Gravatar image (overrides default set)'
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'default-force',
				'type' => 'toggle/yes-no',
				'title' => 'Force Default',
				'description' => 'Force default image to always load?',
				'default_value' => false
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'rating',
				'type' => 'select',
				'title' => 'Rating',
				'description' => 'Select highest image rating to display',
				'default_value' => 'g',
				'field_options' => array(
					'g' => 'G (suitable for display on all websites with any audience type)',
					'pg' => 'PG (may contain rude gestures, provocatively dressed individuals, the lesser swear words, or mild violence)',
					'r' => 'R (may contain such things as harsh profanity, intense violence, nudity, or hard drug use)',
					'x' => 'X (may contain hardcore sexual imagery or extremely disturbing violence)'
				)
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'border-width',
				'type' => 'text',
				'title' => 'Border Width',
				'description' => 'Enter a border width in pixels for the Gravatar image'
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'border-color',
				'type' => 'colorpicker',
				'title' => 'Border Color',
				'description' => 'Select a color for the Gravatar image border'
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'padding',
				'type' => 'text',
				'title' => 'Padding',
				'description' => 'Enter a padding size in pixels for the Gravatar image'
			),
			$infinity_post_grav_defaults
		);

		ice_register_option(
			array(
				'name' => 'bg-color',
				'type' => 'colorpicker',
				'title' => 'Background Color',
				'description' => 'Select a background color for the Gravatar image'
			),
			$infinity_post_grav_defaults
		);

//
// Font Group
//
ice_register_group( 'font' );

	// Icon Sweets
	ice_register_feature(
		array(
			'name' => 'iconsweets',
			'group' => 'font',
			'type' => 'default',
			'title' => 'The Icon Font-Face being used',
			'description' => 'Icons',
			'style' => 'assets/fonts/iconsweets.css'
		)
	);

//
// WP Group
//
ice_register_group( 'wp' );

	// WordPress Support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'wp',
			'type' => 'default',
			'title' => 'Wordpress Support',
			'description' => 'Enables WordPress support',
			'style' => 'assets/css/wordpress.css'
		)
	);
	
	// Base WordPress Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'wp',
			'type' => 'default',
			'title' => 'WordPress Styles',
			'description' => 'The base WordPress styling',
			'body_class' => 'infinity-wp'
		)
	);

//
// BP Group
//
ice_register_group( 'bp' );

	// BuddyPress support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'bp',
			'type' => 'bp/support',
			'title' => 'BuddyPress Support',
			'description' => 'Enables BuddyPress support',
			'style' => 'assets/css/buddypress.css'
		)
	);

	// Base BuddyPress Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'bp',
			'type' => 'default',
			'title' => 'BuddyPress Styles',
			'description' => 'The base BuddyPress styles',
			'body_class' => 'infinity-bp'
		)
	);

	// BP Sidebar Setup
	ice_register_feature(
		array(
			'name' => 'sidebar-setup',
			'group' => 'bp',
			'section' => 'buddypress',
			'type' => 'default',
			'title' => 'BuddyPress Sidebar',
			'description' => 'Special BuddyPress sidebar registration',
			'required_feature' => 'support'
		)
	);

//
// BP Plugins Compat Group
//
ice_register_group( 'bp-plugins' );

	// Popular BuddyPress plugin support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'bp-plugins',
			'type' => 'default',
			'title' => 'BuddyPress Plugins Support',
			'description' => 'Popular BuddyPress plugins support',
			'style' => 'assets/css/buddypress-plugins.css'
		)
	);

	// Popular BuddyPress plugin styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'bp-plugins',
			'type' => 'default',
			'title' => 'BuddyPress Plugins Styles',
			'description' => 'Popular BuddyPress plugins support styles',
//			'body_class' => 'infinity-bp'
		)
	);

//
// BP FBConnect Group
//
ice_register_group( 'bp-fbconnect' );

	// BP Facebook Connect Support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'bp-fbconnect',
			'type' => 'bp/fb-autoconnect',
			'class' => 'info-box register-intro'
		)
	);
		ice_register_option(
			array(
				'name' => 'toggle',
				'group' => 'bp-fbconnect',
				'section' => 'buddypress',
				'type' => 'toggle/yes-no',
				'required_feature' => 'support',
				'title' => 'FaceBook Connect',
				'description' => 'Show connect with Facebook button?',
				'default_value' => true
			)
		);

//
// BP Protect Group
//
ice_register_group( 'bp-protect' );

	// BP Protect Support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'bp-protect',
			'type' => 'bp/protect'
		)
	);
		ice_register_option(
			array(
				'name' => 'toggle',
				'group' => 'bp-protect',
				'section' => 'buddypress',
				'type' => 'toggle/on-off',
				'required_feature' => 'support',
				'title' => 'Private Community',
				'description' => 'Turn this option on to restrict access to your BuddyPress components to members only.',
				'default_value' => false
			)
		);

//
// BP Tour Group
//
ice_register_group( 'bp-tour' );

	// BP Protect Support
	ice_register_feature(
		array(
			'name' => 'activity',
			'group' => 'bp-tour',
			'type' => 'bp/tour',
			'cookie_name' => 'buddypress-tour'
		)
	);
		$infinity_bp_tour_defaults = array(
			'group' => 'bp-tour',
			'type' => 'textarea',
			'section' => 'buddypress',
			'field_class' => 'css-editor'
		);

		ice_register_option(
			array(
				'name' => 'start',
				'title' => 'Activity Stream Tour',
				'description' => 'The first text that is being displayed before the tour starts.',
				'default_value' => "<h4>Hi there!</h4> It seems that this is the first time you've visited our Activity Stream, so let's give you a quick tour of our Features! Ready? Let's do this!"
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'all',
				'title' => 'All Members Text',
				'description' => 'The text explaining the All Members button.',
				'default_value' => "<h4>All Members</h4> If you like to get a nice overview of <em>all the activity</em> posted by our community, this is the button to click!"
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'friends',
				'title' => 'Friends Text',
				'description' => 'The text explaining the Friends button.',
				'default_value' => "<h4>My Friends</h4> Keep track of what your friends are doing. No buddies yet? Why don't you make some by visting the Members Directory!</a>"
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'groups',
				'title' => 'Groups Text',
				'description' => 'The text explaining the Groups button.',
				'default_value' => "<h4>My Groups</h4> By clicking the &quot;My Groups&quot; button you can keep track of what's happening in the groups you've joined. Not a member of a group yet? Check out the Groups Directory!</a>"
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'mentions',
				'title' => 'Mentions Text',
				'description' => 'The text explaining the Mentions button.',
				'default_value' => "<h4>Mentions</h4> You can easily &quot;Mention&quot; others in your updates or forum posts across our community. As soon as someone mentions you using @yourname you'll see these mentions appear under this button."
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'favorites',
				'title' => 'Favorites Text',
				'description' => 'The text explaining the Favorites button.',
				'default_value' => "<h4>Keep Track</h4> If there's a conversation brewing that you find interesting, you can add your voice by clicking on the <strong>Comment</strong> button. By using the <strong>Favorite</strong> button you can easily bookmark the conversation so you go back to it back later. Go ahead and <strong>try it</strong> by clicking on a &quot;Favorite&quot; button!"
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'filter',
				'title' => 'Filter Text',
				'description' => 'The text explaining the filter dropdown.',
				'default_value' => "<h4>Use the filter!</h4> You can filter the stream to only show the items that have caught your interest. For instance you could use the filter <strong>Posts</strong> to show blog posts from across our network. Awesome!"
			),
			$infinity_bp_tour_defaults
		);

		ice_register_option(
			array(
				'name' => 'update',
				'title' => 'Update Text',
				'description' => 'The last text in the tour prompting your user to post an update.',
				'default_value' => "<h4>Update Away!</h4> We have taught you everything you need to know to get started! It's time for you to post your first update. Good luck young grasshopper, we've taught you well!"
			),
			$infinity_bp_tour_defaults
		);

//
// Extensions Group
//
ice_register_group( 'ext' );

	// Extensions Support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'ext',
			'type' => 'default',
			'title' => 'Extension Styles',
			'description' => 'Enables extensions support',
			'style' => 'assets/css/extensions.css'
		)
	);

//
// Responsive Group
//
ice_register_group( 'resp' );

	// Responsive Layout Support
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'resp',
			'type' => 'responsive/layout',
			'title' => 'Responsive Layout',
			'description' => 'Enables responsive layout support',
			'style' => 'assets/css/responsive.css'
		)
	);

	// Responsive Menus
	ice_register_feature(
		array(
			'name' => 'menu',
			'group' => 'resp',
			'type' => 'responsive/menu',
			'title' => 'Responsive Menu',
			'description' => 'Enables the responsive menu javascript',
			'target_selector' => '.sf-menu',
			'switch_width' => 770,
			'top_option_text' => 'Where to?',
			'prepend_to' => 'div.mobile-menu-container'
		)
	);

	// Responsive Videos
	ice_register_feature(
		array(
			'name' => 'videos',
			'group' => 'resp',
			'type' => 'responsive/videos',
			'title' => 'Responsive Videos',
			'description' => 'Enables the responsive videos javascript',
			'target_selector' => '#wrapper'
		)
	);

//
// Typography Group
//
ice_register_group( 'typog' );

	// Typography Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'typog',
			'type' => 'default',
			'title' => 'Typography Styles',
			'description' => 'The base Typography styling',
			'body_class' => 'infinity-typog'
		)
	);

//
// Layout Group
//
ice_register_group( 'layout' );

	// Layout Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'layout',
			'type' => 'default',
			'title' => 'Layout Styles',
			'description' => 'The base layout styling',
			'body_class' => 'infinity-layout'
		)
	);

//
// Buttons Group
//
ice_register_group( 'buttons' );

	// Button Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'buttons',
			'type' => 'default',
			'title' => 'extras Styles',
			'description' => 'The base buttons styling',
			'body_class' => 'infinity-btns'
		)
	);

	// Button Colors
	ice_register_feature(
		array(
			'name' => 'color',
			'group' => 'buttons',
			'type' => 'default',
			'title' => 'Custom button colors',
			'description' => 'Custom button colors.',
			'body_class' => 'infinity-btns'
		)
	);

		ice_register_option(
			array(
				// TODO import old name format(s) as commented out for compat
				// 'name' => 'cbox_button_color',
				'name' => 'custom-color',
				'group' => 'buttons',
				'section' => 'global',
				'type' => 'select',
				'title' => 'Button Color',
				'description' => 'Choose a button color.',
				'field_options' => array(
					'orange' => 'Orange',
					'blue' => 'Blue',
					'darkblue' => 'Navy Blue',
					'black' => 'Black',
					'purple' => 'Purple',
					'grey' => 'Grey',
					'teal' => 'Teal',
					'purple' => 'Purple',
					'green' => 'Green',
					'white' => 'White'
				),
				'default_value' => 'orange'
			)
		);

//
// Icons Group
//
ice_register_group( 'icons' );

	// Icon Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'icons',
			'type' => 'default',
			'title' => 'The Icons used across the theme',
			'description' => 'Icons',
			'body_class' => 'infinity-icons'
		)
	);

//
// Design Group
//
ice_register_group( 'design' );

	// Design Styles
	ice_register_feature(
		array(
			'name' => 'style',
			'group' => 'design',
			'type' => 'default',
			'title' => 'Design Styles',
			'description' => 'The styles which fancy things up a bit',
			'body_class' => 'infinity-design'
		)
	);

//
// Base Group
//
ice_register_group( 'base' );

	// Base Scripts
	ice_register_feature(
		array(
			'name' => 'script',
			'group' => 'base',
			'type' => 'default',
			'title' => 'Base Javascript',
			'description' => 'Some jQuery to spice up the Base Theme',
			'script' => 'assets/js/base.js',
			'script_depends' => array(
				'jquery'
			)
		)
	);

//
// Custom Group
//
ice_register_group( 'custom' );

	// Custom CSS
	ice_register_feature(
		array(
			'name' => 'css',
			'group' => 'custom',
			'type' => 'default',
			'title' => 'Custom CSS',
			'description' => 'Allow custom CSS to be provided with theme options'
		)
	);
		ice_register_option(
			array(
				'name' => 'markup',
				'group' => 'custom',
				'section' => 'global',
				'type' => 'css/custom',
				'title' => 'Custom CSS',
				'description' => 'Enter custom CSS markup to fine tune the look of your site'
			)
		);

//
// Slider Group
//
ice_register_group( 'slider' );

	// Slider post_type='features' support
	ice_register_feature(
		array(
			'name' => 'custom',
			'group' => 'slider',
			'type' => 'default',
			'title' => 'Custom Slider',
			'description' => 'Adds a custom post type for managing slides.'
		)
	);

	// Slider post/page category support
	ice_register_feature(
		array(
			'name' => 'category',
			'group' => 'slider',
			'type' => 'default',
			'title' => 'Category Slider',
			'description' => 'Adds the option to use a category\'s featured images for slide content.'
		)
	);

		$infinity_slider_options_defaults = array(
			'group' => 'slider',
			'section' => 'homepage'
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox_flex_slider',
				'name' => 'mode',
				'type' => 'select',
				'title' => 'Slider Mode',
				'description' =>
					'If you enable the slider you can choose what type of content you want to display. ' .
					'You can choose between displaying images and videos that you have added through the ' .
					'Custom Slides screen or showing images and videos from posts from a category of your choosing. ' .
					'If you choose the latter, there are some options you can set at the bottom of this page.',
				'field_options' => array(
					0 => 'Do not display',
					1 => 'Show Custom Slides',
					2 => 'Show Category'
				),
				'default_value' => 1
			),
			$infinity_slider_options_defaults
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox-flex-slider-height',
				'name' => 'height',
				'title' => 'Slider Height',
				'description' => 'The height of the slider in pixels.',
				'type' => 'ui/slider',
				'min' => 100,
				'max' => 1000,
				'step' => 10,
				'label' => 'Height in pixels:',
				'default_value' => 344
			),
			$infinity_slider_options_defaults
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox-flex-slider-width',
				'name' => 'width',
				'title' => 'Slider Width',
				'description' => 'The width of the slider in pixels.',
				'type' => 'ui/slider',
				'min' => 200,
				'max' => 2000,
				'step' => 10,
				'label' => 'Width in pixels:',
				'default_value' => 670
			),
			$infinity_slider_options_defaults
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox_flex_slider_amount',
				'name' => 'amount',
				'title' => 'Number of Slides',
				'description' => 'Enter the number of slides you want to show.',
				'type' => 'text',
				'default_value' => 0
			),
			$infinity_slider_options_defaults
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox_flex_slider_time',
				'name' => 'time',
				'title' => 'Slider Delay',
				'description' => 'The number of milliseconds between slide changes (1 second = 1000 milliseconds).',
				'type' => 'ui/slider',
				'min' => 1000,
				'max' => 10000,
				'step' => 10,
				'label' => 'Time in milliseconds:',
				'default_value' => 5000
			),
			$infinity_slider_options_defaults
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox_flex_slider_transition',
				'name' => 'transition',
				'title' => 'Transition Speed',
				'description' => 'The number of milliseconds it takes the slide to change (1 second = 1000 milliseconds).',
				'type' => 'ui/slider',
				'min' => 200,
				'max' => 5000,
				'step' => 10,
				'label' => 'Time in milliseconds:',
				'default_value' => 600
			),
			$infinity_slider_options_defaults
		);

		ice_register_option(
			array(
				// TODO import old name format as commented out for compat
				// 'name' => 'cbox_flex_slider_category',
				'name' => 'category',
				'section' => 'homepage',
				'title' => 'Slider Category',
				'description' => 'From which category do you want to show posts? This ONLY works when your slider is set to Show Category.',
				'type' => 'category'
			),
			$infinity_slider_options_defaults
		);

//
// Body Group
//
ice_register_group( 'body' );

	// Body Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'body',
			'type' => 'default',
			'title' => 'Body Layout',
			'description' => 'Change the Body according to your taste'
		)
	);

		$infinity_body_layout_defaults = array(
			'group' => 'body',
			'section' => 'layout',
			'required_feature' => 'layout',
			'style_selector' => 'body.theme-option'
		);

		ice_register_option(
			array(
				'name' => 'width',
				'type' => 'css/length-px',
				'title' => 'Maximum Width',
				'description' => 'Set the maximum width of the site\'s content between %min% and %max% pixels by moving the slider.',
				'min' => 900,
				'max' => 1250,
				'step' => 10,
				'style_selector' => '#wrapper',
				'style_property' => 'max-width'
			),
			$infinity_body_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color'
			),
			$infinity_body_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-image',
				'type' => 'css/bg-image',
				'default_value' => 'assets/images/design/bg-body.gif'
			),
			$infinity_body_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-repeat',
				'type' => 'css/bg-repeat',
				'parent' => 'background-image'
			),
			$infinity_body_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image',
			),
			array_merge( $infinity_body_layout_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => 'body.theme-option:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_body_layout_defaults
		);

//
// Header Group
//
ice_register_group( 'header' );

	// Header Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'header',
			'type' => 'default',
			'title' => 'Header Styles',
			'description' => 'Customize the layout and colors of the header'
		)
	);

		$infinity_header_layout_defaults = array(
			'group' => 'header',
			'section' => 'header',
			'required_feature' => 'layout',
			'style_selector' => '#header'
		);

		ice_register_option(
			array(
				'name' => 'min-height',
				'type' => 'css/length-px',
				'title' => 'Height',
				'description' => 'Select the height of the header by moving the slider',
				'min' => 100,
				'max' => 500,
				'step' => 10,
				'style_property' => 'height'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'margin-top',
				'type' => 'css/length-px',
				'title' => 'Top Margin',
				'description' => 'The margin (spacing) between the top of the header and the top of the page.',
				'min' => 0,
				'max' => 100,
				'step' => 2,
				'style_property' => 'margin-top'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'padding-top',
				'type' => 'css/length-px',
				'title' => 'Top Padding',
				'description' => 'The padding (spacing) between the top of the header and the header content.',
				'min' => 0,
				'max' => 100,
				'step' => 2,
				'style_property' => 'padding-top'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'margin-bottom',
				'type' => 'css/length-px',
				'title' => 'Bottom Margin',
				'description' => 'The margin (spacing) between the bottom of the header and the top of the content section.',
				'min' => 0,
				'max' => 100,
				'step' => 2,
				'style_property' => 'margin-bottom'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'padding-bottom',
				'type' => 'css/length-px',
				'title' => 'Bottom Padding',
				'description' => 'The padding (spacing) between the bottom of the header and the header content.',
				'min' => 0,
				'max' => 100,
				'step' => 2,
				'style_property' => 'padding-bottom'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-image',
				'type' => 'css/bg-image'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-repeat',
				'type' => 'css/bg-repeat',
				'parent' => 'background-image'
			),
			$infinity_header_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image'
			),
			array_merge( $infinity_header_layout_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '#header:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_header_layout_defaults
		);

//
// Header Logo Group
//
ice_register_group( 'header-logo' );

	// Header Logo
	ice_register_feature(
		array(
			'name' => 'support',
			'group' => 'header-logo',
			'type' => 'header-logo'
		)
	);

		$infinity_header_logo_defaults = array(
			'group' => 'header-logo',
			'section' => 'header',
			'required_feature' => 'support'
		);

		ice_register_option(
			 array(
				'name' => 'image',
				'type' => 'upload',
				'title' => 'Logo Image',
				'description' => 'Upload a custom logo to appear in the header'
			),
			$infinity_header_logo_defaults
		);

		ice_register_option(
			array(
				'name' => 'toggle',
				'type' => 'toggle/on-off',
				'title' => 'Logo Image On/Off',
				'description' => 'Turn this Off to prevent any image logo from displaying, even the default.',
				'default_value' => true,
				'parent' => 'image'
			),
			$infinity_header_logo_defaults
		);

		ice_register_option(
			array(
				'name' => 'pos',
				'type' => 'position/left-center-right',
				'title' => 'Logo Position',
				'description' => 'Select a position for the logo',
				'default_value' => 'l',
				'parent' => 'image',
			),
			$infinity_header_logo_defaults
		);

		ice_register_option(
			array(
				'name' => 'top',
				'type' => 'ui/slider',
				'title' => 'Logo Top Spacing',
				'description' => 'Enter a height in pixels for top spacing',
				'min' => 0,
				'max' => 100,
				'step' => 1,
				'suffix' => ' pixels',
				'style_selector' => '.icext-feature.icext-header-logo a',
				'style_property' => 'margin-top',
				'style_unit' => 'px',
				'parent' => 'image',
			),
			$infinity_header_logo_defaults
		);

		ice_register_option(
			array(
				'name' => 'left',
				'type' => 'ui/slider',
				'title' => 'Logo Left Spacing',
				'description' => 'Enter a width in pixels for left spacing',
				'min' => 0,
				'max' => 250,
				'step' => 1,
				'suffix' => ' pixels',
				'style_selector' => '.icext-feature.icext-header-logo a',
				'style_property' => 'margin-left',
				'style_unit' => 'px',
				'parent' => 'image',
			),
			$infinity_header_logo_defaults
		);

		ice_register_option(
			array(
				'name' => 'right',
				'type' => 'ui/slider',
				'title' => 'Logo Right Spacing',
				'description' => 'Enter a width in pixels for right spacing',
				'min' => 0,
				'max' => 250,
				'step' => 1,
				'suffix' => ' pixels',
				'style_selector' => '.icext-feature.icext-header-logo a',
				'style_property' => 'margin-right',
				'style_unit' => 'px',
				'parent' => 'image',
			),
			$infinity_header_logo_defaults
		);

//
// Content Group
//
ice_register_group( 'content' );

	// Content Styles
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'content',
			'type' => 'default',
			'title' => 'Content Styles',
			'description' => 'Customize the layout and colors of the content section.'
		)
	);

		$infinity_content_layout_defaults = array(
			'group' => 'content',
			'section' => 'content',
			'required_feature' => 'layout',
			'style_selector' => '#content'
		);

		ice_register_option(
			array(
				'name' => 'text-color',
				'type' => 'colorpicker',
				'title' => 'Text Color',
				'description' => 'Choose a color for text inside the content section.',
				'style_selector' => '#content a',
				'style_property' => 'color'
			),
			$infinity_content_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'link-color',
				'type' => 'colorpicker',
				'title' => 'Link Color',
				'description' => 'Choose a color for links inside the content section.',
				'style_selector' => '#content a',
				'style_property' => 'color'
			),
			$infinity_content_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color'
			),
			$infinity_content_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-image',
				'type' => 'css/bg-image'
			),
			$infinity_content_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-repeat',
				'type' => 'css/bg-repeat',
				'parent' => 'background-image'
			),
			$infinity_content_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image',
				'group' => 'content',
				'section' => 'content'
			),
			array_merge( $infinity_content_layout_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '#content:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_content_layout_defaults
		);

//
// Widget Group
//
ice_register_group( 'widget' );

	// Widget Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'widget',
			'type' => 'default',
			'title' => 'Widget Styling',
			'description' => 'Customize the layout and colors of widgets.'
		)
	);

		$infinity_widget_layout_defaults = array(
			'group' => 'widget',
			'section' => 'widgets',
			'required_feature' => 'layout',
			'style_selector' => '#sidebar .widget'
		);

		ice_register_option(
			array(
				'name' => 'color-link',
				'type' => 'colorpicker',
				'title' => 'Widget Title Color',
				'description' => 'Choose a font color for widget titles.',
				'style_selector' => '#sidebar .widget h4',
				'style_property' => 'color'
			),
			$infinity_widget_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'font-weight',
				'type' => 'select',
				'title' => 'Font Weight',
				'description' => 'Choose a font weight for widget titles.',
				'style_selector' => '#sidebar .widget h4',
				'style_property' => 'font-weight'
			),
			$infinity_widget_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'padding',
				'type' => 'css/length-px',
				'title' => 'Padding',
				'description' => 'The padding (spacing) between any widget border and it\'s content.',
				'max' => 30,
				'style_property' => 'padding'
			),
			$infinity_widget_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color',
			),
			$infinity_widget_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image'
			),
			array_merge( $infinity_widget_layout_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '#sidebar .widget:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_widget_layout_defaults
		);

//
// Footer Group
//
ice_register_group( 'footer' );

	// Footer Layout
	ice_register_feature(
		array(
			'name' => 'layout',
			'group' => 'footer',
			'type' => 'default',
			'title' => 'footer Styles',
			'description' => 'Customize the layout and colors of the footer'
		)
	);

		$infinity_footer_layout_defaults = array(
			'group' => 'footer',
			'section' => 'footer',
			'required_feature' => 'layout',
			'style_selector' => '.footer-wrap'
		);

		ice_register_option(
			array(
				'name' => 'text-color',
				'type' => 'colorpicker',
				'title' => 'Text Color',
				'description' => 'Choose a color for text inside the footer section.',
				'style_property' => 'color'
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'text-color',
				'type' => 'colorpicker',
				'title' => 'Text Color',
				'description' => 'Choose a color for text inside the footer section.',
				'style_property' => 'color'
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'link-color',
				'type' => 'colorpicker',
				'title' => 'Link Color',
				'description' => 'Choose a color for links inside the footer section.',
				'style_selector' => '.footer-wrap a',
				'style_property' => 'color'
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'margin-top',
				'type' => 'css/length-px',
				'title' => 'Top Margin',
				'description' => 'The margin (spacing) between the bottom of the content section and the top of the footer.',
				'min' => 0,
				'max' => 100,
				'step' => 2,
				'style_property' => 'margin-top'
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-color',
				'type' => 'css/bg-color',
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-image',
				'type' => 'css/bg-image',
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-repeat',
				'type' => 'css/bg-repeat',
				'parent' => 'background-image',
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'background-repeat',
				'type' => 'css/bg-repeat',
				'parent' => 'background-image',
			),
			$infinity_footer_layout_defaults
		);

		ice_register_option(
			array(
				'name' => 'overlay-image'
			),
			array_merge( $infinity_footer_layout_defaults, $overlay_image_defaults )
		);

		ice_register_option(
			array(
				'name' => 'overlay-opacity',
				'type' => 'css/overlay-opacity',
				'style_selector' => '.footer-wrap:before',
				'parent' => 'overlay-image',
				'linked_image' => 'overlay-image'
			),
			$infinity_footer_layout_defaults
		);
